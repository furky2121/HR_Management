// <auto-generated />
using System;
using BilgeLojistikIK.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BilgeLojistikIK.API.Migrations
{
    [DbContext(typeof(BilgeLojistikIKContext))]
    [Migration("20250821020255_AddZimmetStokDosya")]
    partial class AddZimmetStokDosya
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Bordro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BrutMaas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("brut_maas");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("DigerKesintiler")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("diger_kesintiler");

                    b.Property<int>("DonemAy")
                        .HasColumnType("integer")
                        .HasColumnName("donem_ay");

                    b.Property<int>("DonemYil")
                        .HasColumnType("integer")
                        .HasColumnName("donem_yil");

                    b.Property<decimal>("MesaiOdemeler")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("mesai_odemeler");

                    b.Property<decimal>("NetMaas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("net_maas");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<decimal>("PrimOdemeler")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("prim_odemeler");

                    b.Property<decimal>("SgkKesinti")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sgk_kesinti");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<decimal>("VergiKesinti")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("vergi_kesinti");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId", "DonemYil", "DonemAy")
                        .IsUnique();

                    b.ToTable("bordrolar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Kod")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("kod");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique();

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("departmanlar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Egitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("baslangic_tarihi");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("baslik");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("bitis_tarihi");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("durum");

                    b.Property<string>("Egitmen")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("egitmen");

                    b.Property<int?>("Kapasite")
                        .HasColumnType("integer")
                        .HasColumnName("kapasite");

                    b.Property<string>("Konum")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("konum");

                    b.Property<int?>("SureSaat")
                        .HasColumnType("integer")
                        .HasColumnName("sure_saat");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("egitimler");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.EkranYetkisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EkranAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EkranKodu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EkranKodu")
                        .IsUnique();

                    b.ToTable("EkranYetkileri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.IzinTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("durum");

                    b.Property<int>("GunSayisi")
                        .HasColumnType("integer")
                        .HasColumnName("gun_sayisi");

                    b.Property<DateTime>("IsbasiTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("isbasi_tarihi");

                    b.Property<DateTime>("IzinBaslamaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("izin_baslama_tarihi");

                    b.Property<string>("IzinTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("izin_tipi");

                    b.Property<string>("OnayNotu")
                        .HasColumnType("text")
                        .HasColumnName("onay_notu");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("onay_tarihi");

                    b.Property<int?>("OnaylayanId")
                        .HasColumnType("integer")
                        .HasColumnName("onaylayan_id");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanId");

                    b.HasIndex("PersonelId");

                    b.ToTable("izin_talepleri", t =>
                        {
                            t.HasCheckConstraint("CK_IzinTalebi_Durum", "durum IN ('Beklemede', 'Onaylandı', 'Reddedildi')");
                        });
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Kademe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ad");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("Seviye")
                        .HasColumnType("integer")
                        .HasColumnName("seviye");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique();

                    b.HasIndex("Seviye")
                        .IsUnique();

                    b.ToTable("kademeler");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.KademeEkranYetkisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EkranYetkisiId")
                        .HasColumnType("integer");

                    b.Property<bool>("GuncellemeYetkisi")
                        .HasColumnType("boolean");

                    b.Property<int>("KademeId")
                        .HasColumnType("integer");

                    b.Property<bool>("OkumaYetkisi")
                        .HasColumnType("boolean");

                    b.Property<bool>("SilmeYetkisi")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("YazmaYetkisi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EkranYetkisiId");

                    b.HasIndex("KademeId", "EkranYetkisiId")
                        .IsUnique();

                    b.ToTable("KademeEkranYetkileri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IlkGiris")
                        .HasColumnType("boolean")
                        .HasColumnName("ilk_giris");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("kullanici_adi");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sifre_hash");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("son_giris_tarihi");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciAdi")
                        .IsUnique();

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.ToTable("kullanicilar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ad");

                    b.Property<string>("Adres")
                        .HasColumnType("text")
                        .HasColumnName("adres");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cikis_tarihi");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dogum_tarihi");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FotografUrl")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fotograf_url");

                    b.Property<DateTime>("IseBaslamaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ise_baslama_tarihi");

                    b.Property<decimal?>("Maas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("maas");

                    b.Property<int>("PozisyonId")
                        .HasColumnType("integer")
                        .HasColumnName("pozisyon_id");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("soyad");

                    b.Property<string>("TcKimlik")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("tc_kimlik");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefon");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int?>("YoneticiId")
                        .HasColumnType("integer")
                        .HasColumnName("yonetici_id");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PozisyonId");

                    b.HasIndex("TcKimlik")
                        .IsUnique();

                    b.HasIndex("YoneticiId");

                    b.ToTable("personeller");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.PersonelEgitimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("EgitimId")
                        .HasColumnType("integer")
                        .HasColumnName("egitim_id");

                    b.Property<string>("KatilimDurumu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("katilim_durumu");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<int?>("Puan")
                        .HasColumnType("integer")
                        .HasColumnName("puan");

                    b.Property<string>("SertifikaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sertifika_url");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("EgitimId");

                    b.HasIndex("PersonelId");

                    b.ToTable("personel_egitimleri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.PersonelZimmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("durum");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncelleme_tarihi");

                    b.Property<int?>("IadeAlanId")
                        .HasColumnType("integer")
                        .HasColumnName("iade_alan_id");

                    b.Property<string>("IadeNotu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("iade_notu");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("iade_tarihi");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<int>("ZimmetMiktar")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_miktar");

                    b.Property<string>("ZimmetNotu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("zimmet_notu");

                    b.Property<int>("ZimmetStokId")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_stok_id");

                    b.Property<DateTime>("ZimmetTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("zimmet_tarihi");

                    b.Property<int?>("ZimmetVerenId")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_veren_id");

                    b.HasKey("Id");

                    b.HasIndex("IadeAlanId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("ZimmetStokId");

                    b.HasIndex("ZimmetVerenId");

                    b.ToTable("personel_zimmet", t =>
                        {
                            t.HasCheckConstraint("CK_PersonelZimmet_Durum", "durum IN ('Zimmetli', 'Iade Edildi')");
                        });
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Pozisyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer")
                        .HasColumnName("departman_id");

                    b.Property<int>("KademeId")
                        .HasColumnType("integer")
                        .HasColumnName("kademe_id");

                    b.Property<decimal?>("MaxMaas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("max_maas");

                    b.Property<decimal?>("MinMaas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("min_maas");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("KademeId");

                    b.HasIndex("Ad", "DepartmanId", "KademeId")
                        .IsUnique();

                    b.ToTable("pozisyonlar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Zimmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<bool>("BilgisayarCantasi")
                        .HasColumnType("boolean")
                        .HasColumnName("bilgisayar_cantasi");

                    b.Property<string>("BilgisayarCantasiDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("bilgisayar_cantasi_detay");

                    b.Property<bool>("CepTelefonu")
                        .HasColumnType("boolean")
                        .HasColumnName("cep_telefonu");

                    b.Property<string>("CepTelefonuDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("cep_telefonu_detay");

                    b.Property<bool>("DizustuBilgisayar")
                        .HasColumnType("boolean")
                        .HasColumnName("dizustu_bilgisayar");

                    b.Property<string>("DizustuBilgisayarDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dizustu_bilgisayar_detay");

                    b.Property<string>("DokumanNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dokuman_no");

                    b.Property<string>("ErisimYetkileri")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("erisim_yetkileri");

                    b.Property<bool>("GsmHat")
                        .HasColumnType("boolean")
                        .HasColumnName("gsm_hat");

                    b.Property<string>("GsmHatDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("gsm_hat_detay");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncelleme_tarihi");

                    b.Property<string>("Hazirlayan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("hazirlayan");

                    b.Property<bool>("Klavye")
                        .HasColumnType("boolean")
                        .HasColumnName("klavye");

                    b.Property<bool>("Monitor")
                        .HasColumnType("boolean")
                        .HasColumnName("monitor");

                    b.Property<string>("MonitorDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("monitor_detay");

                    b.Property<bool>("Mouse")
                        .HasColumnType("boolean")
                        .HasColumnName("mouse");

                    b.Property<bool>("OfisTelefonu")
                        .HasColumnType("boolean")
                        .HasColumnName("ofis_telefonu");

                    b.Property<string>("OfisTelefonuDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ofis_telefonu_detay");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("Onaylayan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("onaylayan");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<string>("TeslimAlmaNotlari")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("teslim_alma_notlari");

                    b.Property<bool>("TeslimDurumu")
                        .HasColumnType("boolean")
                        .HasColumnName("teslim_durumu");

                    b.Property<string>("TeslimEden")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("teslim_eden");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("teslim_tarihi");

                    b.Property<bool>("YemekKarti")
                        .HasColumnType("boolean")
                        .HasColumnName("yemek_karti");

                    b.Property<string>("YemekKartiDetay")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("yemek_karti_detay");

                    b.Property<DateTime>("ZimmetTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("zimmet_tarihi");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("zimmetler");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetMalzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Miktar")
                        .HasColumnType("integer")
                        .HasColumnName("miktar");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("ZimmetId")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_id");

                    b.Property<int>("ZimmetStokId")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_stok_id");

                    b.HasKey("Id");

                    b.HasIndex("ZimmetId");

                    b.HasIndex("ZimmetStokId");

                    b.ToTable("zimmet_malzemeler");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetStok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<string>("Birim")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("birim");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncelleme_tarihi");

                    b.Property<int>("KalanMiktar")
                        .HasColumnType("integer")
                        .HasColumnName("kalan_miktar");

                    b.Property<string>("Kategori")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kategori");

                    b.Property<string>("MalzemeAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("malzeme_adi");

                    b.Property<string>("Marka")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("marka");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer")
                        .HasColumnName("miktar");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("model");

                    b.Property<int?>("OlusturanId")
                        .HasColumnType("integer")
                        .HasColumnName("olusturan_id");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("onay_durumu");

                    b.Property<string>("OnayNotu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("onay_notu");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("onay_tarihi");

                    b.Property<int?>("OnaylayanId")
                        .HasColumnType("integer")
                        .HasColumnName("onaylayan_id");

                    b.Property<string>("SeriNo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("seri_no");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanId");

                    b.HasIndex("OnaylayanId");

                    b.ToTable("zimmet_stok", t =>
                        {
                            t.HasCheckConstraint("CK_ZimmetStok_OnayDurumu", "onay_durumu IN ('Bekliyor', 'Onaylandi', 'Reddedildi')");
                        });
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetStokDosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("dosya_adi");

                    b.Property<long>("DosyaBoyutu")
                        .HasColumnType("bigint")
                        .HasColumnName("dosya_boyutu");

                    b.Property<string>("DosyaYolu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("dosya_yolu");

                    b.Property<string>("MimeTipi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mime_tipi");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("OrijinalAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("orijinal_adi");

                    b.Property<int>("ZimmetStokId")
                        .HasColumnType("integer")
                        .HasColumnName("zimmet_stok_id");

                    b.HasKey("Id");

                    b.HasIndex("ZimmetStokId");

                    b.ToTable("zimmet_stok_dosyalar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Bordro", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithMany("Bordrolar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.IzinTalebi", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Onaylayan")
                        .WithMany("OnayladigiIzinler")
                        .HasForeignKey("OnaylayanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithMany("IzinTalepleri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onaylayan");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.KademeEkranYetkisi", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.EkranYetkisi", "EkranYetkisi")
                        .WithMany("KademeYetkileri")
                        .HasForeignKey("EkranYetkisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.Kademe", "Kademe")
                        .WithMany()
                        .HasForeignKey("KademeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkranYetkisi");

                    b.Navigation("Kademe");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Kullanici", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithOne("Kullanici")
                        .HasForeignKey("BilgeLojistikIK.API.Models.Kullanici", "PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Personel", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Pozisyon", "Pozisyon")
                        .WithMany("Personeller")
                        .HasForeignKey("PozisyonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Yonetici")
                        .WithMany("AltCalisanlar")
                        .HasForeignKey("YoneticiId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pozisyon");

                    b.Navigation("Yonetici");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.PersonelEgitimi", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Egitim", "Egitim")
                        .WithMany("PersonelEgitimleri")
                        .HasForeignKey("EgitimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithMany("PersonelEgitimleri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Egitim");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.PersonelZimmet", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "IadeAlan")
                        .WithMany()
                        .HasForeignKey("IadeAlanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.ZimmetStok", "ZimmetStok")
                        .WithMany()
                        .HasForeignKey("ZimmetStokId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "ZimmetVeren")
                        .WithMany()
                        .HasForeignKey("ZimmetVerenId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("IadeAlan");

                    b.Navigation("Personel");

                    b.Navigation("ZimmetStok");

                    b.Navigation("ZimmetVeren");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Pozisyon", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Departman", "Departman")
                        .WithMany("Pozisyonlar")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.Kademe", "Kademe")
                        .WithMany("Pozisyonlar")
                        .HasForeignKey("KademeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Kademe");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Zimmet", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetMalzeme", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Zimmet", "Zimmet")
                        .WithMany()
                        .HasForeignKey("ZimmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilgeLojistikIK.API.Models.ZimmetStok", "ZimmetStok")
                        .WithMany()
                        .HasForeignKey("ZimmetStokId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zimmet");

                    b.Navigation("ZimmetStok");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetStok", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Olusturan")
                        .WithMany()
                        .HasForeignKey("OlusturanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BilgeLojistikIK.API.Models.Personel", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Olusturan");

                    b.Navigation("Onaylayan");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.ZimmetStokDosya", b =>
                {
                    b.HasOne("BilgeLojistikIK.API.Models.ZimmetStok", "ZimmetStok")
                        .WithMany()
                        .HasForeignKey("ZimmetStokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZimmetStok");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Departman", b =>
                {
                    b.Navigation("Pozisyonlar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Egitim", b =>
                {
                    b.Navigation("PersonelEgitimleri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.EkranYetkisi", b =>
                {
                    b.Navigation("KademeYetkileri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Kademe", b =>
                {
                    b.Navigation("Pozisyonlar");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Personel", b =>
                {
                    b.Navigation("AltCalisanlar");

                    b.Navigation("Bordrolar");

                    b.Navigation("IzinTalepleri");

                    b.Navigation("Kullanici");

                    b.Navigation("OnayladigiIzinler");

                    b.Navigation("PersonelEgitimleri");
                });

            modelBuilder.Entity("BilgeLojistikIK.API.Models.Pozisyon", b =>
                {
                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
